<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Articles on James Sevedge</title>
    <link>https://jsevedge.github.io/articles/</link>
    <description>Recent content in Articles on James Sevedge</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://jsevedge.github.io/articles/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>An Excercise In Refactoring</title>
      <link>https://jsevedge.github.io/articles/an-excercise-in-refactoring/</link>
      <pubDate>Tue, 09 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jsevedge.github.io/articles/an-excercise-in-refactoring/</guid>
      <description>In my humble experience any discussion about refactoring should start with Refactoring (Martin Fowler/Kent Beck) and Clean Code (Robert Martin). Having at least a rudimentary understanding of the design patterns presented in Gang of Four is helpful too.
It can be daunting to know where exactly to begin with those resources or understand why it matters so let&amp;rsquo;s dive into the following concrete example to provide some clarity on what refactoring a module may look like.</description>
    </item>
    
    <item>
      <title>Treat your Career Like a Startup</title>
      <link>https://jsevedge.github.io/articles/career-as-a-startup/</link>
      <pubDate>Tue, 19 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jsevedge.github.io/articles/career-as-a-startup/</guid>
      <description>Lately I have been having discussions with both close friends and distant acquaintances on &amp;ldquo;leveling up&amp;rdquo; in your career, along the way I have formulated a few thoughts on this topic.
Do the job you want, not the job you have
It is a well understood concept that you should start doing elements of the job you would like to be promoted into before you get the promotion, so figure out what those elements are and do them when opportunity allows.</description>
    </item>
    
    <item>
      <title>API Development (Beyond the Specification Document)</title>
      <link>https://jsevedge.github.io/articles/api-development-to-customer-ux/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jsevedge.github.io/articles/api-development-to-customer-ux/</guid>
      <description>Creating an API that is well thought out, scales and adopts industry standards can be quite difficult. Creating the API while keeping the end consumer User Experience (UX) at the forefront adds even more cognitive load, however the payoff is worth it to stay disciplined and consider it from the start. Let&amp;rsquo;s talk about what that flow might look like at a high level including some example tooling and processes.</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://jsevedge.github.io/articles/hello-world/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jsevedge.github.io/articles/hello-world/</guid>
      <description>Congratulations for making it to an obscure post on an obscure site, check out some of the other posts for better content!</description>
    </item>
    
  </channel>
</rss>
